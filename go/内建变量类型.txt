bool
string
int // 至少32位
uint // 至少32位
(u)int8
(u)int16
(u)int32
(u)int64
uintptr // 指针
byte
rune // 字符
float32
float64
complex64
complex128

fmt.Println(cmplx.Exp(1i*math.Pi) + 1)
fmt.Printf("%.3f\n", cmplx.Exp(1i*math.Pi) + 1)

强制转换类型
func Triangle() {
  var a, b int = 3, 4
  var c int
  c = int(math.Sqrt(float64(a * a + b * b )))
  fmt.Println(c)
}

// 常量用法 常量数值可做各种类型使用
const filename = "abc.txt"
func Triangle() {
  const a, b int = 3, 4
  var c int
  c = int(math.Sqrt(a * a + b * b )) // 这里不用转成float64
  fmt.Println(c)
}

const (
  filename = "abc.txt"
  a, b int = 3, 4
)

// 常量做枚举类型
func enums() {
  const (
    cpp = iota
    _
    python
    golang
    javascript
  )
  // b, kb, mb, gb, tb, pb
  const(
    b = 1 << (10 * iota)
    kb
    mb
    gb
    tb
    pb
  )
  fmt.Println(cpp, javascript, python, golang)
  fmt.Println(b, kb, mb, gb, tb, pb)

}












