package main
 
import (
  "bufio"
  "fmt"
  "io"
  "net/http"
  "os"
  "path"
)
 
func main() {
  imgUrl := "http://hbimg.b0.upaiyun.com/32f065b3afb3fb36b75a5cbc90051b1050e1e6b6e199-Ml6q9F_fw320"
  fileName := path.Base(imgUrl)
 
  res, err := http.Get(imgUrl)
  if err != nil {
    fmt.Println("A error occurred!")
    return
  }
  // defer后的为延时操作，通常用来释放相关变量
  defer res.Body.Close()

  // 获得get请求响应的reader对象
  reader := bufio.NewReaderSize(res.Body, 32 * 1024)
 
  // 上面获取到了输入流的reader对象， 下面来获取本地文件的输出流的writer对象
  imgPath := "C:\\Users\\86177\\Downloads"
  file, err := os.Create(imgPath + fileName)
  if err != nil {
    panic(err)
  }
  // 获得文件的writer对象
  writer := bufio.NewWriter(file) // 下载图片为 32f065b3afb3fb36b75a5cbc90051b1050e1e6b6e199-Ml6q9F_fw320
  // reader和writer对象都得到了，然后在读取写入。
  
  written, _ := io.Copy(writer, reader)
  fmt.Printf("Total length: %d", written) // Total length: 23609
}