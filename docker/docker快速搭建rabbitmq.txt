172.20.0.1
docker network create -d bridge rabbitmq
docker inspect 92
// --hostname rabbit-svr 主机名
docker run -d --hostname rabbit-svr --name rabbit \
-p 5672:5672 -p 15672:15672 -p 25672:25672 \
-v /data/rabbitmq:/var/lib/rabbitmq rabbitmq:managment

// 容器id
docker run -d --network rabbitmq --name rabbit_node \
-p 5672:5672 -p 15672:15672 -p 25672:25672 \
-v /data/rabbitmq_node:/var/lib/rabbitmq rabbitmq:managment

http://192.168.43.25:15672/
guest
guest

Exchange: 消息交换机，决定消息按什么规则，路由到哪个队列
Queue: 消息载体，每个消息都会被投到一个或多个队列
Binding: 绑定，把exchange和queue按照路由规则绑定起来
Routing Key: 路由关键字，exchange根据这关键字来投递消息
Channel: 消息通道，客户端的每个连接建立多个channel
Producer: 消息生产者，用于投递消息的程序
Consumer: 消息的消费者，用于接受消息的程序

Fanout: 类似广播，转发到所有绑定交换机的Queue
Direct: 类似单播， RoutingKey和BindingKey完全匹配
Topic: 类似组播，转发到符合通配符匹配的Queue
Headers: 请求头与消息头匹配，才能接收消息